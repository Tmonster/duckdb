# name: test/optimizer/joins/left_join_reordering/simple_left_join_tests.test
# description: Reordering left joins produces still valid results
# group: [left_join_reordering]

statement ok
create table t1 as select range%150 a1, range%150 a2 from range(100000);

statement ok
create table t2 as select range b1, range b2 from range(10000);

statement ok
create table t3 as select range c1, range c2 from range(150);

statement ok
pragma disabled_optimizers='build_side_probe_side';

# subquery should be removed and INNER join should be pushed into the left
query II
explain select * from (
	select * from t1 left join
	t2 on (a1 = b1 and a2 = b2)
	where b2 is null
),
t3 where a2 = c2;
----
physical_plan	<!REGEX>:.*PROJECTION.*PROJECTION.*

# subquery should be removed and INNER join should be pushed into the left
query II
explain select * from (
	select * from t1 left join
	t2 on (a1 = b1 and a2 = b2)
	where b2 is null
),
t3 where a2 = c2;
----
physical_plan	<REGEX>:.*LEFT.*INNER.*

statement ok
create or replace table t3 as select range c from range(200);

statement ok
create or replace table t1 as select range a from range(100);

statement ok
create or replace table t2 as select range b from range(50);

# verify filter (b is null) above the left join stays in the plan
query II
explain select * from t1 left join t2 on a = b, t3 where b is null and b = c;
----
physical_plan	<REGEX>:.*FILTER.*

# statement ok
# create or replace table t1 as select range a, range % 5 b from range(10);
#
# statement ok
# create or replace table t2 as select range c from range(10);
#
# # verify filter (b is null) above the left join stays in the plan
# statement ok
# select * from t1 left join t2 on a = b;

