# name: test/sql/join/test_joins_on_weird_indexes.test
# description: Test joins that stress the logic of the join order optimizer
# group: [join]

statement ok
CREATE TABLE integers(i INTEGER)

statement ok
INSERT INTO integers VALUES (1), (2), (3), (NULL)

# join multiple set operations
query I
SELECT SUM(i) FROM integers UNION ALL SELECT AVG(i) FROM integers UNION ALL SELECT MIN(i) FROM integers UNION ALL SELECT MAX(i) FROM integers;
----
6.000000
2.000000
1.000000
3.000000


# join multiple set operations
statement ok
SELECT *, i1.rowid as diff_row_id_name FROM integers i1, integers i2 where i1.rowid = i2.i;

statement ok
create table t1 as (select range as a from range(20));

statement ok
create table t2 as (select range as a from range(30));

statement ok
create table t3 as (select range as a from range(50));

statement ok
select t3.a from t3, (select * from t2 intersect select * from t1) t4 where t4.a=t3.a;


# join on PIVOT results 

statement ok
CREATE TABLE Cities(Country VARCHAR, Name VARCHAR, Year INT, Population INT);

statement ok
INSERT INTO Cities VALUES ('NL', 'Amsterdam', 2000, 1005);

statement ok
INSERT INTO Cities VALUES ('NL', 'Amsterdam', 2010, 1065);

statement ok
INSERT INTO Cities VALUES ('NL', 'Amsterdam', 2020, 1158);

statement ok
INSERT INTO Cities VALUES ('US', 'Seattle', 2000, 564);

statement ok
INSERT INTO Cities VALUES ('US', 'Seattle', 2010, 608);

statement ok
INSERT INTO Cities VALUES ('US', 'Seattle', 2020, 738);

statement ok
INSERT INTO Cities VALUES ('US', 'New York City', 2000, 8015);

statement ok
INSERT INTO Cities VALUES ('US', 'New York City', 2010, 8175);

statement ok
INSERT INTO Cities VALUES ('US', 'New York City', 2020, 8772); 

statement ok
create table cities_i_have_been_to (Name Varchar);

statement ok
insert into cities_i_have_been_to VALUES ('Amsterdam'), ('Seattle'), ('New York City');

statement ok
select * from (PIVOT Cities ON Year USING SUM(Population)) t1, cities_i_have_been_to t2 where t1.Name=t2.Name;
