# name: test/sql/cte/test_materialized_CTEs_and_alias.test
# description: Issue #5673 and #4987: CTE and Table name are name shadowing
# group: [cte]

statement ok
create table batch (
      entity text,
      start_ts timestamp,
      duration interval
  )
  ;

statement ok
create table active_events (
  entity text,
  start_ts timestamp,
  end_ts timestamp
)
;

statement ok
explain create table active_events as
  with
      new_events as materialized (  -- Does not make much sense in this example, but my original query was a union of a bunch of things
          select
              entity,
              start_ts as start_ts,
              start_ts + duration as end_ts
          from
              batch
      ), events_to_deduplicate as (
          select
              *
          from  -- We need to deduplicate events for old entites with new data
              active_events old
              semi join new_events new on
                  old.entity = new.entity
          union all
          select *
          from
              new_events
      ), combined_deduplicated_events as (
          select
              entity,
              min(start_ts) as start_ts,
              max(end_ts) as end_ts
          from
              events_to_deduplicate
          group by
              entity
      ), all_events as (
          select
              entity,
              start_ts,
              end_ts
          from
              combined_deduplicated_events
          where
              end_ts > start_ts
          union all
          select
              *
          from  -- The data we did not need to deduplicate
              active_events old
              anti join new_events new on
                  old.entity = new.entity
      )
  select
      *
  from
      combined_leases
  ;

#
#statement ok
#explain create table active_events as
#  with
#      new_events as materialized (  -- Does not make much sense in this example, but my original query was a union of a bunch of things
#          select
#              entity,
#              start_ts as start_ts,
#              start_ts + duration as end_ts
#          from
#              batch
#      ), events_to_deduplicate as (
#          select
#              *
#          from  -- We need to deduplicate events for old entites with new data
#              active_events old
#              semi join new_events new on
#                  old.entity = new.entity
#          union all
#          select *
#          from
#              new_events
#      ), combined_deduplicated_events as (
#          select
#              entity,
#              min(start_ts) as start_ts,
#              max(end_ts) as end_ts
#          from
#              events_to_deduplicate
#          group by
#              entity
#      ), all_events as (
#          select
#              entity,
#              start_ts,
#              end_ts
#          from
#              combined_deduplicated_events
#          where
#              end_ts > start_ts
#          union all
#          select
#              *
#          from  -- The data we did not need to deduplicate
#              active_events old
#              anti join new_events new on
#                  old.entity = new.entity
#      )
#  select
#      *
#  from
#      combined_leases
#  ;