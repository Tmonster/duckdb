name: Windows

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
 win-release-64:
    # Builds binaries for windows_amd64
    name: Windows (64 Bit)
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
        python-version: '3.7'

    - name: Setup Ccache
      uses: hendrikmuhs/ccache-action@main
      with:
        key: ${{ github.job }}
        save: ${{ github.ref == 'refs/heads/main' || github.repository != 'duckdb/duckdb' }}

    - name: Build
      shell: bash
      run: |
        python scripts/windows_ci.py
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_GENERATOR_PLATFORM=x64 -DENABLE_EXTENSION_AUTOLOADING=1 -DENABLE_EXTENSION_AUTOINSTALL=1 -DDUCKDB_EXTENSION_CONFIGS="${GITHUB_WORKSPACE}/.github/config/bundled_extensions.cmake" -DBUILD_ODBC_DRIVER=1 -DDISABLE_UNITY=1
        cmake --build . --config Release

    - name: setup
      uses: mxschmitt/action-tmate@v3

    - name: Tools Test
      shell: bash
      run: |
        python tools/shell/shell-test.py Release/duckdb.exe
        tools/sqlite3_api_wrapper/Release/test_sqlite3_api_wrapper.exe

    - name: Deploy
      shell: bash
      run: |
        python scripts/amalgamation.py
        choco install zip -y --force
        zip -j duckdb_cli-windows-amd64.zip Release/duckdb.exe
        zip -j libduckdb-windows-amd64.zip src/Release/duckdb.dll src/Release/duckdb.lib src/amalgamation/duckdb.hpp src/include/duckdb.h
        zip -j duckdb_odbc-windows-amd64.zip tools/odbc/bin/Release/*
        python scripts/asset-upload-gha.py libduckdb-windows-amd64.zip duckdb_cli-windows-amd64.zip duckdb_odbc-windows-amd64.zip
